{"version":3,"sources":["components/layouts/SignInLinks.js","store/actions/authActions.js","components/layouts/SignOutLinks.js","components/layouts/Navbar.js","components/dashboard/Noification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashbord.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/layouts/AllUsers.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","state","auth","firebase","profile","dispatch","signOut","getState","_ref2","getFirebase","then","type","catch","err","props","react_default","a","createElement","className","react_router_dom","to","href","onClick","initials","SignOutLinks","links","uid","layouts_SignInLinks","layouts_SignOutLinks","exact","Notifications","notifications","map","el","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","toString","calendar","ProjectList","projects","concat","projects_ProjectSummary","Dashbord","_this$props","this","projects_ProjectList","Noification","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","response","doc","set","users","console","log","scope","CreateProject","createProject","history","push","autorId","add","objectSpread","authorId","Date","App","layouts_Navbar","path","component","Dashboard","ProjectDetails","AllUsers","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","ProjectReducer","error","rootReducer","combineReducers","projectReducer","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iQA2BeA,cAZS,SAACC,GACrB,MAAM,CACFC,KAAMD,EAAME,SAASC,UAIF,SAAAC,GACvB,MAAO,CACHC,QAAS,kBAAID,ECHV,SAACA,EAASE,EAAVC,IACcC,EADqBD,EAAfC,eAGdP,OAAOI,UAAUI,KAAK,WAC3BL,EAAS,CAACM,KAAK,sBAChBC,MAAM,SAACC,GACNR,EAAS,CAACM,KAAK,gBAAgBE,eDC5Bb,CArBI,SAACc,GAChB,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,gBACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,GAAGC,QAASR,EAAMR,SAA1B,WACJS,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,mCAAmCJ,EAAMZ,KAAKqB,cECzEC,EATK,WAChB,OACIT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,WACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,YCmBDpB,cALO,SAACC,GACnB,MAAM,CACFC,KAAMD,EAAME,SAASD,OAGdF,CApBD,SAACc,GAAQ,IAEbW,EADOX,EAANZ,KACWwB,IAAMX,EAAAC,EAAAC,cAACU,EAAD,MAAeZ,EAAAC,EAAAC,cAACW,EAAD,MACvC,OACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,YAAYF,UAAU,YAA/B,QAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMU,MAAM,OAAOT,GAAG,IAAIF,UAAU,mBAApC,aACEO,uBCcHK,EA3BM,SAAChB,GAAQ,IACnBiB,EAAejB,EAAfiB,cACP,OACIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,iBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACTa,GAAiBA,EACbC,IAAI,SAACC,GACF,OACIlB,EAAAC,EAAAC,cAAA,MAAIiB,IAAKD,EAAGE,IACRpB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAae,EAAGG,KAAhC,KACArB,EAAAC,EAAAC,cAAA,gBAAQgB,EAAGI,SACXtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACVoB,IAAOL,EAAGM,KAAKC,UAAUC,mBCFvDC,EAbM,SAAAC,GAAa,IAAXC,EAAWD,EAAXC,QACnB,OACI7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc0B,EAAQC,OACtC9B,EAAAC,EAAAC,cAAA,sBAAc2B,EAAQE,gBAAtB,IAAwCF,EAAQG,gBAChDhC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaoB,IAAOM,EAAQI,UAAUR,SAASS,YAAYC,eCQzEC,EAbI,SAAAR,GAAc,IAAZS,EAAYT,EAAZS,SACjB,OACIrC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,wBACZkC,GAAYA,EAASpB,IAAI,SAAAY,GACtB,OACI7B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAE,YAAAiC,OAAcT,EAAQT,IAAMD,IAAKU,EAAQT,IAC5CpB,EAAAC,EAAAC,cAACqC,EAAD,CAAgBV,QAASA,yBCF3CW,mLAEM,IAAAC,EACgCC,KAAK3C,MAAnCsC,EADFI,EACEJ,SAASlD,EADXsD,EACWtD,KAAM6B,EADjByB,EACiBzB,cACrB,OAAI7B,EAAKwB,IAGLX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACyC,EAAD,CACIN,SAAUA,KAGlBrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAC0C,EAAD,CAAe5B,cAAeA,OAXzBhB,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAUxC,GAAK,mBAJrByC,aAgCRC,cACX9D,YATkB,SAACC,GACnB,MAAM,CACFmD,SAASnD,EAAM8D,UAAUC,QAAQZ,SACjClD,KAAMD,EAAME,SAASD,KACrB6B,cAAe9B,EAAM8D,UAAUC,QAAQjC,iBAM3CkC,2BAAiB,CACb,CAACC,WAAW,WACXC,QAAS,CAAC,YAAa,SACxB,CAACD,WAAY,gBACZE,MAAO,EACPD,QAAS,CAAC,OAAQ,WAPZL,CASbP,GCFaO,cACX9D,YAXkB,SAACC,EAAOoE,GAC1B,IAAMlC,EAAGkC,EAASC,MAAMC,OAAOpC,GACzBiB,EAAWnD,EAAM8D,UAAUS,KAAKpB,SAEtC,MAAM,CACFR,QAFYQ,EAAWA,EAASjB,GAAM,KAGtCjC,KAAMD,EAAME,SAASD,QAMzB+D,2BAAiB,CACb,CAACC,WAAY,cAHNJ,CAvCQ,SAAChD,GAAS,IAGtB8B,EAAgB9B,EAAhB8B,QACP,OADuB9B,EAARZ,KACNwB,IACNkB,EAEC7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc0B,EAAQC,OACtC9B,EAAAC,EAAAC,cAAA,SAAI2B,EAAQP,UAEhBtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,wBAAgB2B,EAAQE,gBAAxB,IAA0CF,EAAQG,gBAClDhC,EAAAC,EAAAC,cAAA,WAAMqB,IAAOM,EAAQI,UAAUR,SAASS,YAAYC,cAG5DnC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,cAAvB,gBAKHH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,sBAnBgBH,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAUxC,GAAK,sBCPlCqD,6MACFxE,MAAM,CACFyE,MAAM,GACNC,SAAS,MAEbC,aAAa,SAACC,GACVC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAO/C,GAAK0C,EAAEK,OAAOC,WAGhCC,aAAa,SAACP,GACVA,EAAEQ,iBACFP,EAAKhE,MAAMwE,OAAOR,EAAK7E,gFAEnB,IAAAuD,EACmBC,KAAK3C,MAArByE,EADH/B,EACG+B,UACP,OAFI/B,EACatD,KACTwB,IAAYX,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAUxC,GAAG,MAE7BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQsE,SAAU/B,KAAK2B,cACnCrE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOwE,QAAQ,SAAf,SACA1E,EAAAC,EAAAC,cAAA,SAAON,KAAK,QAAQwB,GAAG,QAAQuD,SAAUjC,KAAKmB,gBAElD7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOwE,QAAQ,YAAf,YACA1E,EAAAC,EAAAC,cAAA,SAAON,KAAK,WAAWwB,GAAG,WAAWuD,SAAUjC,KAAKmB,gBAExD7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVqE,EAAYxE,EAAAC,EAAAC,cAAA,SAAIsE,GAAe,gBAhCvC1B,aAsDN7D,cAbO,SAACC,GACnB,MAAM,CACFsF,UAAWtF,EAAMC,KAAKqF,UACtBrF,KAAMD,EAAME,SAASD,OAIJ,SAACG,GACtB,MAAM,CACFiF,OAAQ,SAACK,GAAD,OAAStF,GRvDFuF,EQuDkBD,ERtD9B,SAACtF,EAASE,EAAVoC,IACYlC,EADuBkC,EAAflC,eAEdP,OAAO2F,2BACZD,EAAYlB,MACZkB,EAAYjB,UACdjE,KAAK,WACHL,EAAS,CACLM,KAAK,oBAEVC,MAAM,SAACC,GACNR,EAAS,CACLM,KAAK,cACLE,aAbM,IAAC+E,KQ2DR5F,CAA6CyE,GCtDtDqB,6MACF7F,MAAM,CACFyE,MAAM,GACNC,SAAS,GACToB,UAAU,GACVC,SAAS,MAEbpB,aAAa,SAACC,GACVC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAO/C,GAAK0C,EAAEK,OAAOC,WAGhCC,aAAa,SAACP,GACVA,EAAEQ,iBACFP,EAAKhE,MAAMmF,OAAOnB,EAAK7E,gFAEnB,IAAAuD,EACsBC,KAAK3C,MAAxBZ,EADHsD,EACGtD,KAAMqF,EADT/B,EACS+B,UACb,OAAGrF,EAAKwB,IAAYX,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAUxC,GAAG,MAE7BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQsE,SAAU/B,KAAK2B,cACnCrE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOwE,QAAQ,aAAf,eACA1E,EAAAC,EAAAC,cAAA,SAAON,KAAK,OAAOwB,GAAG,YAAYuD,SAAUjC,KAAKmB,gBAErD7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOwE,QAAQ,aAAf,cACA1E,EAAAC,EAAAC,cAAA,SAAON,KAAK,OAAOwB,GAAG,WAAWuD,SAAUjC,KAAKmB,gBAEpD7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOwE,QAAQ,SAAf,SACA1E,EAAAC,EAAAC,cAAA,SAAON,KAAK,QAAQwB,GAAG,QAAQuD,SAAUjC,KAAKmB,gBAElD7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOwE,QAAQ,YAAf,YACA1E,EAAAC,EAAAC,cAAA,SAAON,KAAK,WAAWwB,GAAG,WAAWuD,SAAUjC,KAAKmB,gBAExD7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVqE,EAAYxE,EAAAC,EAAAC,cAAA,SAAIsE,GAAiB,gBA1CzC1B,aAgEN7D,cAZS,SAACC,GACrB,MAAM,CACFC,KAAMD,EAAME,SAASD,KACrBqF,UAAWtF,EAAMC,KAAKqF,YAGH,SAAAlF,GACvB,MAAM,CACF4F,OAAQ,SAACC,GAAD,OAAW7F,ETlCL,SAAC6F,GACnB,OAAO,SAAC7F,EAAUE,EAAX4F,GAAkD,IAA5B1F,EAA4B0F,EAA5B1F,YAAY2F,EAAgBD,EAAhBC,aAC/BjG,EAAWM,IACXsD,EAAYqC,IAElBjG,EAASD,OAAOmG,+BACZH,EAAQxB,MACRwB,EAAQvB,UACVjE,KAAK,SAAC4F,GACJ,OAAOvC,EAAUG,WAAW,SAASqC,IAAID,EAASlE,KAAKV,KAAK8E,IAAI,CAC5DT,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClBzE,SAAU2E,EAAQH,UAAU,GAAGG,EAAQF,SAAS,OAErDtF,KAAK,WACJL,EAAS,CAACM,KAAM,qBACjBC,MAAM,SAAAC,GACLR,EAAS,CAACM,KAAK,eAAeE,WSiBNoF,CAAOC,OAI5BlG,CAA4C8F,GCvB5ChC,cACX9D,YAPoB,SAAAC,GACpB,MAAM,CACFiE,WAAYjE,EAAM8D,aAMtBE,2BAAiB,CACb,CAACC,WAAW,WAHLJ,CAzCE,SAAChD,GACd,IAAM2F,EAAQ3F,EAAMoD,WAAWF,QAAQyC,MAGvC,OAFAC,QAAQC,MAGJ5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,aAEIH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,MAAI2F,MAAM,OAAV,WACA7F,EAAAC,EAAAC,cAAA,MAAI2F,MAAM,OAAV,cACA7F,EAAAC,EAAAC,cAAA,MAAI2F,MAAM,OAAV,aACA7F,EAAAC,EAAAC,cAAA,MAAI2F,MAAM,OAAV,SACA7F,EAAAC,EAAAC,cAAA,MAAI2F,MAAM,OAAV,cAGJ7F,EAAAC,EAAAC,cAAA,aACKwF,GAASA,EAAMzE,IAAI,SAACC,GACjB,OACKlB,EAAAC,EAAAC,cAAA,MAAIiB,IAAKD,EAAGE,IACTpB,EAAAC,EAAAC,cAAA,MAAI2F,MAAM,OAAO3E,EAAGE,IACpBpB,EAAAC,EAAAC,cAAA,UAAKgB,EAAG8D,WACRhF,EAAAC,EAAAC,cAAA,UAAKgB,EAAG+D,0BCvBlCa,6MACF5G,MAAM,CACF4C,MAAM,GACNR,QAAQ,MAEZuC,aAAa,SAACC,GACVC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAO/C,GAAK0C,EAAEK,OAAOC,WAGhCC,aAAa,SAACP,GACVA,EAAEQ,iBAEFP,EAAKhE,MAAMgG,cAAchC,EAAK7E,OAC9B6E,EAAKhE,MAAMiG,QAAQC,KAAK,8EAIxB,OADYvD,KAAK3C,MAAXZ,KACGwB,IAELX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQsE,SAAU/B,KAAK2B,cACnCrE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,sBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOwE,QAAQ,SAAf,SACA1E,EAAAC,EAAAC,cAAA,SAAON,KAAK,OAAOwB,GAAG,QAAQuD,SAAUjC,KAAKmB,gBAEjD7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOwE,QAAQ,WAAf,mBACA1E,EAAAC,EAAAC,cAAA,YAAUkB,GAAG,UAAUuD,SAAUjC,KAAKmB,aAAc1D,UAAU,0BAElEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,aAdKH,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAUxC,GAAK,mBAlBhByC,aAoDb7D,cAZS,SAACC,GACrB,MAAO,CACHC,KAAMD,EAAME,SAASD,OAIJ,SAACG,GACtB,MAAM,CACFyG,cAAe,SAAClE,GAAD,OAAWvC,ECrDP,SAACuC,GACxB,OAAO,SAACvC,EAASE,EAAVoC,GAAiDA,EAA5BlC,YAA4B,IAE9CsD,GAAYqC,EAFkCzD,EAAhByD,gBAG9BhG,EAAUG,IAAWJ,SAASC,QAC9B6G,EAAU1G,IAAWJ,SAASD,KAAKwB,IACzCqC,EAAUG,WAAW,YAAYgD,IAAjClC,OAAAmC,EAAA,EAAAnC,CAAA,GACOpC,EADP,CAEIE,gBAAiB1C,EAAQ2F,UACzBhD,eAAgB3C,EAAQ4F,SACxBoB,SAAUH,EACVjE,UAAW,IAAIqE,QAChB3G,KAAK,WACJL,EAAS,CACLM,KAAK,iBACLiC,cACLhC,MAAM,SAACC,GACNR,EAAS,CACLM,KAAM,uBACNE,WDkC2BiG,CAAclE,OAI1C5C,CAA6C6G,GE3B7CS,mLAlBX,OACEvG,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACsG,EAAD,MACExG,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,KACE7C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAO/B,OAAK,EAAC2F,KAAK,IAAIC,UAAaC,IACnC3G,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAO4D,KAAK,eAAeC,UAAWE,IACtC5G,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAO4D,KAAK,UAAUC,UAAWhD,IACjC1D,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAO4D,KAAK,UAAUC,UAAW3B,IACjC/E,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAO4D,KAAK,UAAUC,UAAWZ,IACjC9F,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAO4D,KAAK,YAAYC,UAAYG,cAZhC/D,oBCEEgE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1D,MACvB,2DClBN,IAAM2D,EAAU,CACZ1C,UAAW,MAyCA2C,EArCK,WAA2B,IAA1BjI,EAA0BkI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApBF,EAAWK,EAASH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAOC,EAAO3H,MACV,IAAK,cACD,OAAOqE,OAAAmC,EAAA,EAAAnC,CAAA,GACA/E,EADP,CAEIsF,UAAU,iBAElB,IAAK,gBAED,OADAmB,QAAQC,IAAI,iBACL3B,OAAAmC,EAAA,EAAAnC,CAAA,GACA/E,EADP,CAEIsF,UAAW,OAEnB,IAAK,kBAED,OADAmB,QAAQC,IAAI,uBACL1G,EACX,IAAK,gBAED,OADAyG,QAAQC,IAAI,aAAc2B,EAAOzH,KAC1BZ,EACX,IAAK,iBAED,OADAyG,QAAQC,IAAI,gBACL3B,OAAAmC,EAAA,EAAAnC,CAAA,GACA/E,EADP,CAEIsF,UAAW,OAEnB,IAAK,eAED,OADAmB,QAAQC,IAAI,2BACZ3B,OAAAmC,EAAA,EAAAnC,CAAA,GACO/E,EADP,CAEIsF,UAAW+C,EAAOzH,IAAI0H,UAE9B,QACI,OAAOtI,ICrCbgI,EAAU,GAiBDO,EAdQ,WAA2B,IAA1BvI,EAA0BkI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApBF,EAAWK,EAASH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAOC,EAAO3H,MACV,IAAK,iBAEL,OADA+F,QAAQC,IAAI,kBAAmB2B,EAAO1F,SAC/B3C,EACP,IAAK,uBAEL,OADAyG,QAAQC,IAAI,uBAAwB2B,EAAOG,OACpCxI,EACP,QACA,OAAOA,YCCAyI,EAPKC,YAAgB,CAChCzI,KAAMgI,EACNtF,QAASgG,EACT7E,UAAW8E,mBACX1I,SAAU2I,6DCIZ3I,IAAS4I,cATE,CACTC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,gBAKNlJ,QAAf,ECHImJ,EAAQC,YAAYb,EACtB5E,YACI0F,YAAgBC,IAAMC,kBAAkB,CAACjJ,0BAAY2F,+BACrDuD,yBAAeC,GACfC,6BAAmBD,EAAS,CACxBE,wBAAuB,EACvBC,YAAa,QACbC,mBAAkB,MAK9BV,EAAMW,oBAAoBvJ,KAAK,WAC3BwJ,IAASC,OACLpJ,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAUd,MAAOA,GACbvI,EAAAC,EAAAC,cAACoJ,EAAD,OAEJC,SAASC,eAAe,WLmG1B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhK,KAAK,SAAAiK,GACjCA,EAAaC","file":"static/js/main.74ec8b0c.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\nconst SignInLinks =(props)=>{\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a href='' onClick={props.signOut}>LogOut</a></li>\r\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.auth.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        auth: state.firebase.profile\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        signOut: ()=>dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignInLinks)","export const signIn = (credentials)=>{\r\n    return (dispatch,getState,{getFirebase})=>{\r\n        const firebase=getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({\r\n                type:'LOGIN_SUCCESS'\r\n            })\r\n        }).catch((err)=>{\r\n            dispatch({\r\n                type:'LOGIN_ERROR',\r\n                err\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () =>{\r\n    return (dispatch,getState,{getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type:'SIGNOUT_SUCCESS'});\r\n        }).catch((err)=>{\r\n            dispatch({type:'SIGNOUT_ERROR',err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser)=>{\r\n    return (dispatch, getState, {getFirebase,getFirestore})=>{\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((response)=>{\r\n            return firestore.collection('users').doc(response.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0]+newUser.lastName[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err=>{\r\n            dispatch({type:'SIGNUP_ERROR',err})\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst SignOutLinks =()=>{\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>SignUp</NavLink></li> \r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignOutLinks","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignInLinks from './SignInLinks';\r\nimport SignOutLinks from './SignOutLinks';\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar =(props)=>{\r\n    const {auth}=props\r\n    const links= auth.uid ? <SignInLinks/>:<SignOutLinks/>\r\n    return (\r\n        <nav className=\"grey darken-3\">\r\n            <div className=\"container-fluid right\">\r\n                <Link to='/allusers' className=\"btn pink\">All</Link>\r\n            </div>\r\n            <div className=\"container\">\r\n                <Link exact=\"true\" to='/' className=\"brand-logo left\">MarioPlan</Link>\r\n                { links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications =(props)=>{\r\n    const {notifications}=props\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications\r\n                            .map((el)=>{\r\n                                return (\r\n                                    <li key={el.id}>\r\n                                        <span className=\"pink-text\">{el.user} </span>\r\n                                        <span> {el.content}</span>\r\n                                        <div className=\"grey-text note-date\">\r\n                                            {moment(el.time.toDate()).fromNow()}\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                    </ul>\r\n                </div>                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary=({project})=>{\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProjectSummary","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ProjectList =({projects})=>{\r\n    return (\r\n        <div className =\"project-list section\">\r\n           {projects && projects.map(project=>{\r\n               return(\r\n                   <Link to={`/project/${project.id}`} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                   </Link>\r\n               )\r\n           })} \r\n        </div>\r\n    )\r\n}\r\nexport default ProjectList;","import React,{Component} from 'react';\r\nimport Notifications from './Noification';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Dashbord extends Component{\r\n \r\n    render(){\r\n        const{projects,auth, notifications}=this.props;\r\n        if(!auth.uid) return <Redirect to = '/signin'/>\r\n        \r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList \r\n                            projects={projects}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        projects:state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects',\r\n         orderBy: ['createdAt', 'desc']},\r\n        {collection: 'notifications', \r\n         limit: 3,\r\n         orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashbord)","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) =>{\r\n    // console.log(props)\r\n    // const id = props.match.params.id\r\n    const {project,auth} = props;\r\n    if(!auth.uid) return <Redirect to = '/signin' />\r\n    if(project){\r\n        return(\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>{project.content}</p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n            <Link to='/' className=\"black-text\">&#8592; Back</Link>\r\n        </div>\r\n        )\r\n    } else{\r\n        return (\r\n         <p className=\"container\">Loading project...</p>   \r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state, ownProps)=>{\r\n    const id=ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return{\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass SignIn extends Component{\r\n    state={\r\n        email:'',\r\n        password:''\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        this.props.signIn(this.state)\r\n    }\r\n    render(){\r\n        const {authError,auth}=this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return(\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p>:null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        signIn: (creds)=>dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React,{Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component{\r\n    state={\r\n        email:'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:''\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        this.props.signUp(this.state)\r\n    }\r\n    render(){\r\n        const {auth, authError} = this.props;\r\n        if(auth.uid) return <Redirect to=\"/\"/>\r\n        return(\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First name:</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lasttName\">Last name:</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        signUp: (newUser)=>dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\n\r\nconst AllUsers = (props) =>{\r\n    const users = props.collection.ordered.users;\r\n    console.log()\r\n    \r\n    return (\r\n        <div className=\"container row\">\r\n            All Users:\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\">User ID</th>\r\n                    <th scope=\"col\">First name</th>\r\n                    <th scope=\"col\">Last name</th>\r\n                    <th scope=\"col\">Email</th>\r\n                    <th scope=\"col\">Password</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users && users.map((el)=>{\r\n                        return (\r\n                             <tr key={el.id}>\r\n                                <th scope=\"row\">{el.id}</th>\r\n                                <td>{el.firstName}</td>\r\n                                <td>{el.lastName}</td>\r\n                                {/* <td>{}</td>\r\n                                <td>{}</td> */}\r\n                            </tr> \r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        collection: state.firestore\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'users'}\r\n    ])\r\n)(AllUsers)","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass CreateProject extends Component{\r\n    state={\r\n        title:'',\r\n        content:''\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        // console.log(this.state)\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n    render(){\r\n        const{auth}=this.props;\r\n        if(!auth.uid) return <Redirect to = '/signin' />\r\n        return(\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" onChange={this.handleChange} className=\"materialize-textarea\"></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        createProject: (project)=>dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (CreateProject)","export const createProject=(project)=>{\r\n    return (dispatch,getState, {getFirebase,getFirestore})=>{\r\n        // make async call to db\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const autorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: autorId,\r\n            createdAt: new Date()\r\n        }).then(()=>{\r\n            dispatch({\r\n                type:'CREATE_PROJECT',\r\n                project})\r\n        }).catch((err)=>{\r\n            dispatch({\r\n                type: 'CREATE_PROJECT_ERROR',\r\n                err\r\n            })\r\n        })\r\n    }\r\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layouts/Navbar'\nimport Dashboard from './components/dashboard/Dashbord'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport AllUsers from './components/layouts/AllUsers'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n            <Switch>\n              <Route exact path='/' component = {Dashboard}/> \n              <Route path='/project/:id' component={ProjectDetails}/>\n              <Route path='/signin' component={SignIn}/>\n              <Route path='/signup' component={SignUp}/>\n              <Route path='/create' component={CreateProject}/>\n              <Route path='/allusers' component ={AllUsers}/>\n            </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState={\r\n    authError: null\r\n}\r\n\r\n\r\nconst authReducer = (state=initState, action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            return {\r\n                ...state,\r\n                authError:'Login failed'\r\n            };\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('user was signed out');\r\n            return state;\r\n        case 'SIGNOUT_ERROR':\r\n            console.log('some error', action.err);\r\n            return state;\r\n        case 'SIGNIN_SUCCESS':\r\n            console.log('sign up user');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'SIGNUP_ERROR':\r\n            console.log('sign up failed by error')\r\n            return{\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer","const initState={}\r\n\r\n\r\nconst ProjectReducer = (state=initState, action)=>{\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n        console.log('created project', action.project)\r\n        return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n        console.log('create_project_error', action.error);\r\n        return state;\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\n\r\nexport default ProjectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers} from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyAzMcrhfTNNepxzu7peYPRZqPWxqDakJH0\",\r\n    authDomain: \"net-my-marioplan.firebaseapp.com\",\r\n    databaseURL: \"https://net-my-marioplan.firebaseio.com\",\r\n    projectId: \"net-my-marioplan\",\r\n    storageBucket: \"net-my-marioplan.appspot.com\",\r\n    messagingSenderId: \"30576526076\"\r\n  };\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './store/reducers/rootReducer'\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {reduxFirestore, getFirestore} from 'redux-firestore';\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig,{\n            useFirestoreForProfile:true, \n            userProfile: 'users',\n            attachAuthIsReady:true\n        })\n    )\n);\n\nstore.firebaseAuthIsReady.then(()=>{\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>, \n        document.getElementById('root')\n    );\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}